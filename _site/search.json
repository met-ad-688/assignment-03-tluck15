[
  {
    "objectID": "assignment03-tluck15.html",
    "href": "assignment03-tluck15.html",
    "title": "Assignment 03",
    "section": "",
    "text": "In order to complete the analysis the first step is to load and prepare the data. For this analysis I will update data types, calculate average salary, remove extraneous characters from relevant data text, and replace null values.\nFor the data set job_postings save as df and change the columns SALARY_FROM, SALARY_TO, SALARY, MIN_YEARS_EXPERIENCE, and MAX_YEARS_EXPERIENCE to type float.\n\ndf = (\n    df.withColumn(\"SALARY_FROM\", col(\"SALARY_FROM\").cast(\"float\"))\n      .withColumn(\"SALARY_TO\", col(\"SALARY_TO\").cast(\"float\"))\n      .withColumn(\"SALARY\", col(\"SALARY\").cast(\"float\"))\n      .withColumn(\"MIN_YEARS_EXPERIENCE\", col(\"MIN_YEARS_EXPERIENCE\").cast(\"float\"))\n      .withColumn(\"MAX_YEARS_EXPERIENCE\", col(\"MAX_YEARS_EXPERIENCE\").cast(\"float\"))\n)\n\nNext the median needs to be calculated as it will be used to fill na values. Create a new method called compute_median.\nCompute the median of the df data frame on job_postings columns SALARY_FROM, SALARY_TO, SALARY.\n\nmedian_from = compute_median(df,\"SALARY_FROM\")\nmedian_to = compute_median(df, \"SALARY_TO\")\nmedian_salary = compute_median(df, \"SALARY\")\n\nprint(\"medians: \", median_from, median_to, median_salary)"
  },
  {
    "objectID": "assignment03-tluck15.html#data-preparation-activities",
    "href": "assignment03-tluck15.html#data-preparation-activities",
    "title": "Assignment 03",
    "section": "",
    "text": "In order to complete the analysis the first step is to load and prepare the data. For this analysis I will update data types, calculate average salary, remove extraneous characters from relevant data text, and replace null values.\nFor the data set job_postings save as df and change the columns SALARY_FROM, SALARY_TO, SALARY, MIN_YEARS_EXPERIENCE, and MAX_YEARS_EXPERIENCE to type float.\n\ndf = (\n    df.withColumn(\"SALARY_FROM\", col(\"SALARY_FROM\").cast(\"float\"))\n      .withColumn(\"SALARY_TO\", col(\"SALARY_TO\").cast(\"float\"))\n      .withColumn(\"SALARY\", col(\"SALARY\").cast(\"float\"))\n      .withColumn(\"MIN_YEARS_EXPERIENCE\", col(\"MIN_YEARS_EXPERIENCE\").cast(\"float\"))\n      .withColumn(\"MAX_YEARS_EXPERIENCE\", col(\"MAX_YEARS_EXPERIENCE\").cast(\"float\"))\n)\n\nNext the median needs to be calculated as it will be used to fill na values. Create a new method called compute_median.\nCompute the median of the df data frame on job_postings columns SALARY_FROM, SALARY_TO, SALARY.\n\nmedian_from = compute_median(df,\"SALARY_FROM\")\nmedian_to = compute_median(df, \"SALARY_TO\")\nmedian_salary = compute_median(df, \"SALARY\")\n\nprint(\"medians: \", median_from, median_to, median_salary)"
  }
]